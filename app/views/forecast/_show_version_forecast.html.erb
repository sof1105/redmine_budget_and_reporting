
<% if not @errors.nil? %>
  <div class="flash error"><%= @errors %></div>
<% end %>

<% finished_id = VersionCustomField.where(:name => "Abgeschlossen").first.try(:id) %>

<% if User.current.allowed_to?({:controller => "versions", :action => "update"}, @project) %>  
  <table>
    <tr>
      <td>geplanntes Abschlussdatum:</td>
      <td><% tmp=@version.effective_date%> <%= text_field_tag("effective_date", tmp.nil? ? "" : I18n.l(@version.effective_date)) %></td>
    </tr>
    <tr>
      <td>tatsächliches Abschlussdatum:</td>
      <td><% tmp=@version.custom_field_value(finished_id) %>
	  <%= text_field_tag("finished_date", tmp.empty? ? "" : I18n.l(@version.custom_field_value(finished_id).to_date)) %> </td>
    </tr>
    <tr>
      <%= form_tag({},:id => :edit_version_form) do %>
      <%= hidden_field_tag("version[effective_date]", @version.effective_date.try(:strftime, "%Y-%m-%d")) %>
      <%= hidden_field_tag("version[custom_field_values]["+finished_id.to_s+"]",
	      @version.custom_field_value(finished_id)) %>
      <%= token_tag nil %>
      <%= hidden_field_tag("key", User.current.api_token.value) %>
      <td rowspan="2"><%= submit_tag("Speichern") %></td>
    </tr>
  </table>
  <% end %>  

  <script>

    $("#effective_date").datepicker({
      duration: 0,
      dateFormat: "<%= I18n.t("date.formats.default").sub('%d', 'dd').sub('%m', 'mm').sub('%Y', 'yy') %>",
      altField: "#version_effective_date",
      altFormat: "yy-mm-dd"
    });
    $("#finished_date").datepicker({
      duration: 0,
      dateFormat: "<%= I18n.t("date.formats.default").sub('%d', 'dd').sub('%m', 'mm').sub('%Y', 'yy') %>",
      altField: "#version_custom_field_values_<%= finished_id %>",
      altFormat: "yy-mm-dd"
    });
    $("#edit_version_form").submit(function(event){
      // prevent standard submit
      event.preventDefault();

      // check if fields are empty, and set hidden fields accordingly
      if ($.trim($("#effective_date").val()) === ""){$("#version_effective_date").val("");}
      if ($.trim($("#finished_date").val()) === ""){$("#version_custom_field_values_<%= finished_id %>").val("");}
      
      // send ajax put request
      $.ajax({url : "<%= url_for({:controller => "versions", :action => "update", :id => @version.id}) %>.json",
              type : "PUT",
              data : $("#edit_version_form").serialize(),
              timeout: 8000,
              statusCode:
                {
                   422: function(xhr, data, text){
                          errors = $.parseJSON(xhr.responseText).errors.join("<br>");
                          // harcoding sucks, but easiest way...
                          errors = errors.replace("Datum is kein gültiges Datum", "geplanntes Abschlussdatum hat falsches Format");
                          errors = errors.replace("Abgeschlossen is kein gültiges Datum","tatsächliches Abschlussdatum hat falsches Format");
                          $.get("<%= url_for({:controller => 'forecast', :action => 'show_versiondate_forecast',
                                              :version_id =>@version.id, :project_id => @project.id}) %>",
                                function(data){
                                  $("#floating").html("<div class='flash error'>"+errors+"</div>"+data);
                                }
                          );
                        },
                   200: function(xhr, data, text){
                          $.get("<%= url_for({:controller => 'forecast', :action => 'show_versiondate_forecast',
                                              :version_id =>@version.id, :project_id => @project.id}) %>",
                                function(data){
                                  $("#floating").html("<div class='flash notice'>Datum aktualisiert</div>"+data);
                                }
                          );
                        }
                },
              error: function(xhr, status, text){
                       $("#floating").html("Es ist ein Netzwerkfehler aufgetreten: "+status+" "+text);
                     }
              });
  });
  </script>

<% else %>
  <table>
    <tr>
      <td>geplanntes Abschlussdatum:</td>
      <td><%= I18n.l(@version.effective_date) %></td>
    </tr>
    <tr>
      <td>tatsächliches Abschlussdatum:</td>
      <td><%= I18n.l(@version.custom_field_value(finished_id).to_date) %></td>
    </tr>
  </table>
<% end %>
 

  Bisherige Prognosen:
  
  <table class="forecast small">
    <tr>
      <th>Prognose</th>
      <th>erstellt am</th>
      <th></th>
  <% @forecasts.each do |forecast| %>
    <tr>
      <td><%= I18n.l(forecast.forecast_date) %></td>
      <td><%= I18n.l(forecast.planned_date) %></td>
      <td>
      <% if User.current.allowed_to?({:controller => "forecast", :action => "delete_versiondate_forecast"}, @project) %>
        <a onclick="reload_dialog('<%= url_for({:controller => "forecast", :action => "delete_versiondate_forecast",
                                                :project_id => @project.id, :forecast_id => forecast.id}) %>')" href="#">
          <span class="icon icon-del"/>löschen?</a>
      <% end %>
      </td>
    </tr>
  <% end %>
  
  <%# add new forecast if user is allowed_to %>
  <% if User.current.allowed_to?({:controller => "forecast", :action => "new_versiondate_forecast"}, @project) %>
    <tr>
      <%= form_tag({}, :id =>"new_forecast_form") do %>
        <td><%= text_field_tag(:forecast_date, nil, :size => 10) %></td>
        <td><%= text_field_tag(:planned_date, nil, :size => 10) %></td>
        <td><a href="#" onClick="add_forecast()"><span class="icon icon-add"/>hinzufügen</a></td>
      <% end %>
    </tr>
    </table>

    <script type="text/javascript">
      //transform inputs into datepicker
      $("#forecast_date").datepicker({
        duration: 0,
        dateFormat: "<%= I18n.t("date.formats.default").sub('%d', 'dd').sub('%m', 'mm').sub('%Y', 'yy') %>"
      });
      $("#planned_date").datepicker({
        duration: 0,
        dateFormat: "<%= I18n.t("date.formats.default").sub('%d', 'dd').sub('%m', 'mm').sub('%Y', 'yy') %>"
      });
      $("#planned_date").datepicker("setDate", "<%= I18n.l(Date.today) %>");
    
      // add new forecast via ajax post
      function add_forecast(){
        $.post("<%= url_for({:controller => "forecast", :action => "new_versiondate_forecast",
                                  :version_id => @version.id, :project_id => @project.id}) %>",
              $("#new_forecast_form").serialize(),
              function(data){
                $("#floating").html(data);
              });
      };
    </script>

  <% else %>
    </table>
  <% end %>
